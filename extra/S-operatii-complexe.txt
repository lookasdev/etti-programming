Să se scrie un program care supraîncarcă operatorii uzuali pentru algebra numerelor complexe: +, -, *, /.

Se vor citi două numere complexe de la tastatură și o comandă reprezentând simbolul operației ce va avea loc între cele două numere complexe. De la tastatură se citesc 4 numere reale, re1, im1, re2, im2, reprezentând părțile reale și imaginare ale celor 2 numere complexe. Ulterior, se va citi un întreg asociat operației ce se va rula 1(+), 2(-), 3(*) sau 4(/) și se va afișa pe ecran rezultatul operației sub forma a două numere reale re3 im3.


#include <iostream>

class Complex
{
private:
    float re;
    float im;
    
public:
    Complex(float re = 0.0f, float im = 0.0f) : re(re), im(im) {}
    
    Complex operator+(const Complex &c)
    {
        return Complex(this->re + c.re, this->im + c.im);
    }
    Complex operator-(const Complex &c)
    {
        return Complex(this->re - c.re, this->im - c.im);
    }
    Complex operator*(const Complex &c)
    {
        return Complex((this->re * c.re) - (this->im * c.im), (this->im * c.re) + (this->re * c.im));
    }
    Complex operator/(const Complex &c)
    {
        return Complex(((this->re * c.re) + (this->im * c.im)) / (c.re * c.re + c.im * c.im), ((this->im * c.re) - (this->re * c.im)) / (c.re * c.re + c.im * c.im));
    }
    
    void afisare()
    {
        std::cout << this->re << " "<< this->im;
    }
    
    friend std::ostream& operator<<(std::ostream& os, const Complex& c);
    friend std::istream& operator>>(std::istream& is, Complex& c);
};

std::ostream& operator<<(std::ostream& os, const Complex& c)
{
    os << c.re << " " << c.im;
    return os;
}
std::istream& operator>>(std::istream& is, Complex& c)
{
    is >> c.re >> c.im;
    return is;
}

int main()
{
    Complex c1, c2;
    std::cin >> c1 >> c2;
    int operatie;
    std::cin >> operatie;
    if (operatie == 1) (c1 + c2).afisare();
    else if (operatie == 2) (c1 - c2).afisare();
    else if (operatie == 3) (c1 * c2).afisare();
    else if (operatie == 4) (c1 / c2).afisare();

    return 0;
}
