Să se scrie două clase distincte, Părinte și Copil. Clasa Copil va conține datele membre vârstă și nume și va declara (toată) clasa Părinte drept prietenă. Clasa Părinte va conține o funcție membră care îi permite să modifice numele Copilului doar dacă acesta din urmă are vârsta <18 ani, iar Copilul conține o funcție membră care îi permite să își modifice numele doar dacă are >=18 ani. Toate inițializările din constructori vor fi făcute cu ajutorul listei de inițializare.
În programul principal se vor citi de la tastatură, de pe linii diferite, următoarele date:

un întreg m, reprezentând vârsta Copilului;

un șir de caractere s, reprezentând numele Copilului (șirul de caractere poate fi format din mai mult de un cuvânt);

un șir de caractere new_s, reprezentând noul nume al Copilului (șirul de caractere poate fi format din mai mult de un cuvânt);

un întreg x, reprezentând persoana care va solicita schimbarea: 0 - Părintele; 1 - Copilul.

Se va afișa pe ecran noul nume al Copilului, sau “EROARE” în cazul în care persoana desemnată să modifice numele nu are permisiunea să facă acest lucru, conform regulii enunțate mai sus.

Extensie: separați declarațiile claselor și definițiile funcțiilor membre în fișiere diferite. Notă: trebuie avute în vedere declarația în avans a clasei care este accesată de o altă clasă - discutăm împreună.



#include <iostream>
#include <string>

bool ok = true; // pt caz - schimba numele copilului in calitate de parinte

class Parinte;

class Copil
{
private:
    int varsta;
    std::string nume;
    friend class Parinte;

public:
    std::string get_nume() { return nume; }
    Copil(int v, const std::string& n) : varsta(v), nume(n) {}
    void modificaNume(const std::string& new_nume) { nume = new_nume; }
};

class Parinte
{
public:
    void modificaNumeCopil(Copil& c, const std::string& new_nume)
    {
        if (c.varsta < 18) c.modificaNume(new_nume);
        else
        {
            ok = false;
            std::cout << "EROARE" << std::endl;
        }
    }
};

int main()
{
    int m, x;
    std::string s, new_s;

    std::cin >> m;
    std::cin.ignore();
    std::getline(std::cin, s);
    std::getline(std::cin, new_s);
    std::cin >> x;
    std::cin.ignore();
    
    if (x == 0)
    {
        // schimba numele copilului in calitate de parinte
        Parinte parinte;
        Copil copil(m, s);
        parinte.modificaNumeCopil(copil, new_s);
        if (ok) std::cout << copil.get_nume() << std::endl;
    }
    else if (x == 1)
    {
        // schimba numele copilului ca si copil
        Copil copil(m, s);
        if (m < 18) std::cout << "EROARE" << std::endl; // m = varsta copilului init
        else
        {
            copil.modificaNume(new_s);
            std::cout << copil.get_nume() << std::endl;
        }
    }

    return 0;
}